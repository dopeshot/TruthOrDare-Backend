name: Backend-Pipeline

on:
  push:
  pull_request:
    branches: [main]

jobs:
    test:
        # Making sure this really is...well stable. Deploying a faulty version would be fatal
        name: End 2 End Tests
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 18

            # setup env
            - name: create env
              run: 'echo "$ENV_VALUES" > .env'
              shell: bash
              env:
                  ENV_VALUES: ${{secrets.PIPELINE_ENV}}

            - name: node modules
              run: 'npm i'

            # run e2e tests
            - name: end 2 end tests
              run: npm run test:e2e

    docker-build-and-push:
        runs-on: ubuntu-latest
        needs: [test]
        strategy:
            matrix:
                platform: ["linux/amd64", "linux/arm64"]
        steps:
          - name: Checkout
            uses: actions/checkout@v3

          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v2

          # Arm support
          - name: Set up QEMU
            uses: docker/setup-qemu-action@v2

          # Extract branch name and replace / with _ as slashes are invalid as image tags
          - name: Extract branch name
            run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/} | tr '/' '_')"
            id: extract_branch

          - name: Login to GitHub Container Registry
            uses: docker/login-action@v2
            with:
              registry: ghcr.io
              username: ${{ github.repository_owner }}
              password: ${{ secrets.GITHUB_TOKEN }}

          - name: Build and push
            uses: docker/build-push-action@v4
            with:
              context: .
              tags: ghcr.io/dopeshot/nextparty/backend:${{ steps.extract_branch.outputs.branch }}
              platforms: ${{ matrix.platform }}
              push: true
              labels: |
                org.opencontainers.image.source: https://github.com/dopeshot/nextpartz.io-backend
                org.opencontainers.image.description: Backend for nextparty
                
    redeploy:
        name: Call redeploy webhook
        runs-on: ubuntu-latest
        needs: [docker-build-and-push]
        if: github.ref == 'refs/heads/stable'
        steps:
            - name: Deploy docker container webhook
              uses: joelwmale/webhook-action@master
              env:
                  WEBHOOK_URL: ${{ secrets.DEPLOY_WEBHOOK  }}
